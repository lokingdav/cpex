x-cpex-service: &cpex-service
  image: kofidahmed/cpex
  platform: linux/x86_64
  volumes:
    - '.:/app'
  depends_on:
    - cache
  networks:
    - net

services:
  experiment:
    image: cpex-experiment
    platform: linux/x86_64
    container_name: cpex-exp
    command: tail -f /dev/null
    environment:
      - DOCKER_SOCKET_PATH=${DOCKER_SOCKET_PATH:-/var/run/docker.sock}
      - HOST_APP_PATH=${HOST_APP_PATH}
    volumes:
      - '.:/app'
      - ${DOCKER_SOCKET_PATH}:/var/run/docker.sock
      - './docker/data/automation/.aws:/root/.aws'
      - './docker/data/automation/.ssh:/root/.ssh'
    depends_on:
      - cache
      - mongo
    networks:
      - net
    profiles: [experiment]

# CPeX Services
  evaluator:
    <<: *cpex-service
    container_name: evaluator
    command: > 
      gunicorn cpex.servers.evaluator:app 
      --bind 0.0.0.0:80 
      --workers 5
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 30
      --timeout 120
    ports:
      - 10430:80
    profiles: [cpex, ev]
    depends_on:
      - ev-keyrotation
      - cache

  ev-keyrotation:
    <<: *cpex-service
    container_name: ev-keyrotation
    command: python cpex/servers/keyrotation.py
    profiles: [cpex, ev]

  message-store:
    <<: *cpex-service
    container_name: message-store
    command: >
      gunicorn cpex.servers.message_store:app 
      --bind 0.0.0.0:80 
      --workers 5
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 30
      --timeout 120
    ports:
      - 10431:80
    profiles: [cpex, ms]

  provider-iwf:
    <<: *cpex-service
    container_name: provider-iwf
    command: >
      gunicorn cpex.servers.cpex_proxy:app 
      --bind 0.0.0.0:80 
      --workers 8
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
    profiles: [proxy]

  sti-cps:
    <<: *cpex-service
    container_name: sti-cps
    command: > 
      gunicorn cpex.prototype.stirshaken.cps_server:app 
      --bind 0.0.0.0:80 
      --workers 5
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 30
      --timeout 120
    ports:
      - 10432:80
    environment:
      - NODE_PORT=10432
    profiles: [cps]

  sti-cr-0:
    <<: *cpex-service
    container_name: sti-cr-0
    command: > 
      gunicorn cpex.prototype.stirshaken.cert_repo:app 
      --bind 0.0.0.0:80 
      --workers 2
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 30
      --timeout 120
    ports:
      - 10433:80
    environment:
      - NODE_PORT=10433
    profiles: [cr]

  sti-cr-1:
    <<: *cpex-service
    container_name: sti-cr-1
    command: > 
      gunicorn cpex.prototype.stirshaken.cert_repo:app 
      --bind 0.0.0.0:80 
      --workers 2
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 30
      --timeout 120
    ports:
      - 10434:80
    environment:
      - NODE_PORT=10434
    profiles: [cr]

  sti-cr-2:
    <<: *cpex-service
    container_name: sti-cr-2
    command: > 
      gunicorn cpex.prototype.stirshaken.cert_repo:app 
      --bind 0.0.0.0:80 
      --workers 2
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 30
      --timeout 120
    ports:
      - 10435:80
    environment:
      - NODE_PORT=10435
    profiles: [cr]

  sti-cr-3:
    <<: *cpex-service
    container_name: sti-cr-3
    command: > 
      gunicorn cpex.prototype.stirshaken.cert_repo:app 
      --bind 0.0.0.0:80 
      --workers 2
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 30
      --timeout 120
    ports:
      - 10436:80
    environment:
      - NODE_PORT=10436
    profiles: [cr]

# Cache and Database
  cache:
    container_name: cpex-cache
    image: redis
    platform: linux/x86_64
    ports:
      - 6379:6379
    networks:
      - net
  
  mongo:
    container_name: cpex-mongo
    image: mongo
    platform: linux/x86_64
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - 27017:27017
    volumes:
      - ./docker/data/mongo:/data/db
    networks:
      - net
    profiles: [experiment]

networks:
  net:
    driver: bridge
x-cpex-service: &cpex-service
  image: kofidahmed/cpex
  platform: linux/x86_64
  volumes:
    - '.:/app'
  depends_on:
    - cache
  networks: [expnet]

x-testnet: &testnet
  image: dindvm
  privileged: true
  environment:
    - DOCKER_TLS_CERTDIR=
  profiles: [testnet]

services:
  experiment:
    image: cpex-experiment
    platform: linux/x86_64
    container_name: cpex-exp
    command: tail -f /dev/null
    environment:
      - DOCKER_SOCKET_PATH=${DOCKER_SOCKET_PATH:-/var/run/docker.sock}
      - HOST_APP_PATH=${HOST_APP_PATH}
    volumes:
      - '.:/app'
      - ${DOCKER_SOCKET_PATH}:/var/run/docker.sock
      - './docker/data/.aws:/root/.aws'
      - './docker/data/.ssh:/root/.ssh'
    depends_on:
      - cache
      - mongo
    networks: [expnet, testnet]
    profiles: [experiment]

# CPeX Services
  evaluator:
    <<: *cpex-service
    container_name: evaluator
    command: > 
      gunicorn cpex.servers.evaluator:app 
      --bind 0.0.0.0:80 
      --workers 4
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 60
      --timeout 120
    ports:
      - 10430:80
    profiles: [cpex, ev]
    depends_on:
      - ev-keyrotation
      - cache

  ev-keyrotation:
    <<: *cpex-service
    container_name: ev-keyrotation
    command: python cpex/servers/keyrotation.py
    profiles: [cpex, ev]

  message-store:
    <<: *cpex-service
    container_name: message-store
    command: >
      gunicorn cpex.servers.message_store:app 
      --bind 0.0.0.0:80 
      --workers 4
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 60
      --timeout 120
    ports:
      - 10431:80
    profiles: [cpex, ms]

  jodi-proxy:
    <<: *cpex-service
    container_name: jodi-proxy
    command: >
      gunicorn cpex.servers.cpex_proxy:app 
      --bind 0.0.0.0:80 
      --workers 8
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 60
    profiles: [jodi_proxy]

  sti-cr:
    <<: *cpex-service
    container_name: sti-cr
    command: > 
      gunicorn cpex.prototype.stirshaken.cert_repo:app 
      --bind 0.0.0.0:80 
      --workers 2
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 60
      --timeout 120
    ports:
      - 10432:80
    environment:
      - NODE_PORT=10432
    profiles: [atis, cr]

  sti-cps:
    <<: *cpex-service
    container_name: sti-cps
    command: > 
      gunicorn cpex.prototype.stirshaken.cps_server:app 
      --bind 0.0.0.0:80 
      --workers 6
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 60
      --timeout 120
    ports:
      - 10433:80
    environment:
      - NODE_PORT=10433
    depends_on:
      cache:
        condition: service_healthy
    profiles: [atis, cps]

  oobss-proxy:
    <<: *cpex-service
    container_name: oobss-proxy
    command: >
      gunicorn cpex.prototype.stirshaken.oobss_proxy:app 
      --bind 0.0.0.0:80 
      --workers 8
      --worker-class uvicorn.workers.UvicornWorker 
      --log-file=-
      --keep-alive 60
    profiles: [oobss_proxy]

# Cache and Database
  cache:
    container_name: cache
    image: redis
    platform: linux/x86_64
    networks:
      - expnet
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5
  
  mongo:
    container_name: cpex-mongo
    image: mongo
    platform: linux/x86_64
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - 27017:27017
    volumes:
      - ./docker/data/mongo:/data/db
    networks:
      - expnet
    profiles: [experiment]

# DindVM Nodes
  node-0:
    <<: *testnet
    hostname: node-0
    container_name: node-0
    networks:
      testnet:
        ipv4_address: 172.20.0.10
    volumes:
      - ./docker/data/testnet/node-0/var/lib/docker:/var/lib/docker
      - ./docker/data/testnet/node-0/opt/cpex:/opt/cpex

  node-1:
    <<: *testnet
    hostname: node-1
    container_name: node-1
    networks:
      testnet:
        ipv4_address: 172.20.0.11
    volumes:
      - ./docker/data/testnet/node-1/var/lib/docker:/var/lib/docker
      - ./docker/data/testnet/node-1/opt/cpex:/opt/cpex

  node-2:
    <<: *testnet
    hostname: node-2
    container_name: node-2
    networks:
      testnet:
        ipv4_address: 172.20.0.12
    volumes:
      - ./docker/data/testnet/node-2/var/lib/docker:/var/lib/docker
      - ./docker/data/testnet/node-2/opt/cpex:/opt/cpex

  node-3:
    <<: *testnet
    hostname: node-3
    container_name: node-3
    networks:
      testnet:
        ipv4_address: 172.20.0.13
    volumes:
      - ./docker/data/testnet/node-3/var/lib/docker:/var/lib/docker
      - ./docker/data/testnet/node-3/opt/cpex:/opt/cpex

  node-4:
    <<: *testnet
    hostname: node-4
    container_name: node-4
    networks:
      testnet:
        ipv4_address: 172.20.0.14
    volumes:
      - ./docker/data/testnet/node-4/var/lib/docker:/var/lib/docker
      - ./docker/data/testnet/node-4/opt/cpex:/opt/cpex

  node-5:
    <<: *testnet
    hostname: node-5
    container_name: node-5
    networks:
      testnet:
        ipv4_address: 172.20.0.15
    volumes:
      - ./docker/data/testnet/node-5/var/lib/docker:/var/lib/docker
      - ./docker/data/testnet/node-5/opt/cpex:/opt/cpex

  node-6:
    <<: *testnet
    hostname: node-6
    container_name: node-6
    networks:
      testnet:
        ipv4_address: 172.20.0.16
    volumes:
      - ./docker/data/testnet/node-6/var/lib/docker:/var/lib/docker
      - ./docker/data/testnet/node-6/opt/cpex:/opt/cpex

  node-7:
    <<: *testnet
    hostname: node-7
    container_name: node-7
    networks:
      testnet:
        ipv4_address: 172.20.0.17
    volumes:
      - ./docker/data/testnet/node-7/var/lib/docker:/var/lib/docker
      - ./docker/data/testnet/node-7/opt/cpex:/opt/cpex

  node-8:
    <<: *testnet
    hostname: node-8
    container_name: node-8
    networks:
      testnet:
        ipv4_address: 172.20.0.18
    volumes:
      - ./docker/data/testnet/node-8/var/lib/docker:/var/lib/docker
      - ./docker/data/testnet/node-8/opt/cpex:/opt/cpex

  node-9:
    <<: *testnet
    hostname: node-9
    container_name: node-9
    networks:
      testnet:
        ipv4_address: 172.20.0.19
    volumes:
      - ./docker/data/testnet/node-9/var/lib/docker:/var/lib/docker
      - ./docker/data/testnet/node-9/opt/cpex:/opt/cpex

networks:
  testnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
  expnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/24

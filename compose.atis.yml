x-cpex-service: &cpex-service
  image: cpex
  platform: linux/x86_64
  volumes:
    - '.:/app'
  networks:
    - net
  depends_on:
    - mongo
    - cache

services:
  mongo:
    container_name: sti-mongo
    image: mongo
    platform: linux/x86_64
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - 27017:27017
    volumes:
      - ./docker/data/sti-mongo:/data/db
    networks:
      - net

  cache:
    container_name: sti-cache
    image: redis
    platform: linux/x86_64
    ports:
      - 6379:6379
    networks:
      - net

  atis-cps-0:
    <<: *cpex-service
    container_name: atis-cps-0
    command: uvicorn cpex.prototype.stirshaken.cps_server:app --host 0.0.0.0 --port 80 --reload
    ports:
      - 10433:80
    environment:
      - NODE_FQDN=atis-cps-0

  atis-cps-1:
    <<: *cpex-service
    container_name: atis-cps-1
    command: uvicorn cpex.prototype.stirshaken.cps_server:app --host 0.0.0.0 --port 80 --reload
    ports:
      - 10434:80
    environment:
      - NODE_FQDN=atis-cps-1

  experiment:
    <<: *cpex-service
    container_name: cpex-exp
    command: tail -f /dev/null
    environment:
      - DOCKER_SOCKET_PATH=${DOCKER_SOCKET_PATH:-/var/run/docker.sock}
      - HOST_APP_PATH=${HOST_APP_PATH}
    volumes:
      - '.:/app'
      - ${DOCKER_SOCKET_PATH}:/var/run/docker.sock

networks:
  net:
    driver: bridge